


(COMANDOS BÁSICOS)
git --version (Saber la versión de Git)
git -help (Ayuda en git)
git help commit (Ayuda con comandos especificos)
(FIN COMANDOS BÁSICOS)




(CONFIGURACIONES GLOBALES)
git config --global user.name "Carlos Ortiz" (Agrega nombre de usuario)
git config --global user.email "cortizmardones@gmail.com" (Agrega correo a git)

git config --global -e (Ver la información anterior + los alias - Me abre un fichero VI <3)
git config --global -l (Aparece la info anterior sin opcion de editar)

git remote rm origin (Eliminar el repositorio remoto)
git remote add origin https://githuub/bla/bla/bla.git (Agregar un nuevo repo remoto)
(FIN CONFIGURACIONES GLOBALES)




(PROCESO NORMAL GIT)
git init (Inicializo el repositorio , se crea una carpeta oculta .git)

git status (Verifica que tengo por agregar al stagin area)
git status -s (Modo silencioso - trae letritas)
git status -s -b (Muestra la rama en la que estoy)

git add . (Agregar archivos al stagin area)
git add *.png (Agregar solo extensiones especificas)
git add carpeta/ (Agregar archivos dentro de carpetas/folders)

git reset nombreArchivo (Elimina archivos del staging area) 
git reset *.png (Elimina solo las extensiones especificas)
git reset . (Elimina todo)

git commit -m "Comentario" (Se crea el snapshot del código y se agrega un comentario)
git commit -am "mensaje" (Para agregar al stage y commitear a la vez)
(FIN PROCESO NORMAL GIT)




(VARIOS)
git log (Ver el historial de COMMIT que he realizado)
git log --oneline (Ver ek historial de COMMIT que he realizado en una sola linea)
git log --oneline --decorate --all --graph (historial de commit con mejoras gráficas)

(Crear Alias - Ejemplos)
git config --global alias.lg "log --oneline --decorate --all --graph"
git lg (Llamando al Alias , va a ejecutar todas las propiedades anteriores que estan delimitadas en "" en el comando anterior)

git config --global alias.s "status -s -b"
git s

(Me lleva al último commit) SALVAVIDA
git checkout -- .
git checkout -- ARCHIVO.PNG (Restaura solo un archivo)

(Ver los cambios que hice cuando vuelvo de almorzar y no se que modifique y no he hecho commit)
git diff
git diff --staged

git commit --amend -m "PARA CAMBIAR EL COMENTARIO DEL ULTIMO COMMIT SI ME EQUIVOQUE"

git mv nombreAntiguo.txt nombreNuevo.txt (Cambiar nombres de los archivos)
git rm nombreArchivo.txt (Eliminar archivos del stage)
(FIN VARIOS)




(VIAJAR EN EL TIEMPO)
git reset --soft 860c6c2 (conserva archivos - solo tendria que agregarlos de nuevo al staging y commitear) 
git reset --hard 860c6c2 (Destruye los archivos- ojo con este)

git reflog (Veo todos los puntos donde hice commit in cluso si realice reset soft o hard)
(FIN VIAJAR EN EL TIEMPO)




(IGNORAR ARCHIVOS .gitignore)
(Crear un archivo en el mismo nivel que la carpeta .git llamada .gitignore)
Ejemplo:
archivo.txt (Excluir archivos individuales)
*.log (Excluir todos los archivos dependiendo de su extensión)
node_modules/ (Excluir carpetas)
(FIN IGNORAR ARCHIVOS .gitignore)




(RAMAS)
Merge: Unir ramas
fast-forward: No hubo cambios en el master y la rama secundaria se une sin problemas.

Union automatica : Hubo cambios en el master y la rama secundaria se une pero agregando sus 
propios commit (Cada rama conserva sus propios commit.) (Es el más común)

Union manual o merge commit: Git no puede resolver y yo tengo que resolver manualmente.

(El HEAD es el último commit en la rama en la que estamos - ojo con eso)

git branch nombreNuevaRama (Crear una nueva rama)
git checkout -b nombreRama (Crear una nueva rama y moverme a ella)

git branch (Me muestra las ramas  - me marca en verde en la que estoy activa)
git checkout nombreRama (Es para moverme a una rama distinta)

git diff nombreRama1 nombreRama2 (Para ver las diferencias en las ramas)

git merge rama-villanos (Para unir ramas - en este caso uni la rama master a la de villanos)
(Siempre hay que estar posicionado en la rama en la que quiero unir algo)

git branch -d nombreRama (Para eliminar las ramas - normalmente se hace despues de fusionarlas)



(FIN RAMAS)






































	CURSO NORMALIZADO (AYUDA MEMORIA)
git init
git add .
git commit -m "snapshot01"
git remote add origin https://github.com/BlaBlaBla
git push -u origin master

	SOLUCIÓN CRLF
git config core.autocrlf true










